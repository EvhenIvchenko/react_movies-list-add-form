{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","services/urlCheck.js","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","pattern","urlIsValid","url","test","TextField","name","value","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","trim","htmlFor","type","classNames","event","target","onBlur","NewMovie","onAdd","initialMovie","count","setCount","setMovie","isAllFilled","hasUrlError","handleInputChange","onSubmit","preventDefault","prevCount","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.143ed195.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","// eslint-disable-next-line max-len\nconst pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\nexport const urlIsValid = (url) => {\n  if (pattern.test(url)) {\n    return true;\n  }\n\n  return false;\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { urlIsValid } from '../../services/urlCheck';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (value: string, name: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = true,\n  onChange = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  let hasError = touched && required && value.trim() === '';\n\n  if (name === 'imgUrl' || name === 'imdbUrl') {\n    hasError = touched && required && !urlIsValid(value);\n  }\n\n  const handleTouch = () => {\n    setTouched(true);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value, name)}\n          onBlur={handleTouch}\n        />\n      </div>\n\n      {hasError && (\n        ((name === 'imgUrl' || name === 'imdbUrl')\n        && (!urlIsValid(value) && value.trim() !== '')\n        )\n          ? (<p className=\"help is-danger\">{`${label} is not a valid URL`}</p>)\n          : (<p className=\"help is-danger\">{`${label} is required`}</p>)\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\nimport { urlIsValid } from '../../services/urlCheck';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const initialMovie = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n  const [count, setCount] = useState(0);\n  const [movie, setMovie] = useState<Movie>(initialMovie);\n\n  const isAllFilled = movie.title.trim() !== ''\n    && movie.imgUrl.trim() !== ''\n    && movie.imdbUrl.trim() !== ''\n    && movie.imdbId.trim() !== '';\n\n  const hasUrlError = !urlIsValid(movie.imgUrl) || !urlIsValid(movie.imdbUrl);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!isAllFilled) {\n      return;\n    }\n\n    onAdd(movie);\n    setMovie(initialMovie);\n    setCount(prevCount => prevCount + 1);\n  };\n\n  const handleInputChange = (value: string, name: string) => {\n    setMovie({\n      ...movie,\n      [name]: value,\n    });\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={movie.title}\n        onChange={handleInputChange}\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={movie.description}\n        onChange={handleInputChange}\n        required={false}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={movie.imgUrl}\n        onChange={handleInputChange}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={movie.imdbUrl}\n        onChange={handleInputChange}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={movie.imdbId}\n        onChange={handleInputChange}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!isAllFilled || hasUrlError}\n            aria-disabled={!isAllFilled || hasUrlError}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={(movie) => {\n          setMovies([...movies, movie]);\n        }}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}